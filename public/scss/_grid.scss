// columns in the row
$inRow: 6;
// margin between columns
$margin: 2%;

@mixin columnWidth ($columns, $inRow){

  $marginTotal: $margin * ($inRow - $columns);

  $width: ((100%/$inRow)*$columns) - ($marginTotal/$inRow);

  @if $width > 100%{
    width: 100%;
  }
  @else{
    width: $width;
  }

  margin-right: $margin;

  &:last-child,
  &:nth-child(#{0n + $inRow}){
    margin-right: 0;
  }
}

.common-grid{

  .row{
    @extend .clearfix;

    @for $i from 1 to ($inRow + 1){
      .c#{$i}{
        display: inline-block;
        float: left;
        margin-bottom: 2%;
        i{
          display: block;
          height: 10px;
          background-color: #fff;
        }
      }
    }

    @for $i from 2 to ($inRow + 1) {
      &.x#{$i}{
        @for $k from 1 to $i {
          > .c#{$k}{
            @include columnWidth($k, $i);

            @media screen and (min-width: 801px) and (max-width: 1280px) {
              @include columnWidth($k, round($i/2));
            }
            @media screen and (min-width: 681px) and (max-width: 800px) {
              @include columnWidth($k, round($i/3));
            }
            @media screen and (max-width: 680px) {
              @include columnWidth($k, round($i/6));
            }
          }
        }
      }
    }
  }
}